-- 衝撃的な通告の後、倉貫さんご自身はどうなっちゃったんですか？
あのミーティングで、僕は育ててきたスタッフを取り上げられました。後に残ったのは、新人君一人だけです。実はこの新人君が、今のソニックガーデンCOO、藤原君その人なんです。とはいえ、このときはまだ入社１年半の新人君です。ようやく軌道に乗ってきた自分のビジネスプランが、自分の実績と関係ないところで潰されてしまったんですよ。さすがに僕も凹みましたし、会社というのはコワイところだと、つくづく思いました。このときの思いはこの後もトラウマとなって、僕の中に残っていきます。 そして、「こんな大きい会社にはいつまでもいられない、こんな思いをしない小さな会社に転職しよう」とさえ思いました。それで、そこからはクヨクヨ考えるのを止めて、何をすべきか、考えました。

-- なるほど。何をどうしようと考え、実行したのか、とても興味があります。
結果から言うと、僕はこのとき3つのチェンジを行いました。 （１）マネージャ→プログラマ （２）Java→Ruby on Rails （３）受託開発→社内システム開発
それぞれ説明しますね。 ずっと言い続けていますが、僕はプログラミングが大好きでプログラマが天職です。だからもし転職するのであれば、マネージャではなくプログラマとして転職したかった。でも、あのころの年齢と、担っていた役回りを考えると、プロジェクト･マネージャでしか転職できない。そこで、転職する前にプログラマにジョブチェンジしようと考えたんです。マネージすべきスタッフは、一人を残して持って行かれてしまいましたから、マネージャをやる必要もなくなりましたし。
次に（２）の言語ですが、当時はJavaが大流行してましたから、周りの若いプログラマは、みんなJava使いでした。すでに三十の声を聞いていた僕は同じ土俵で戦うのは賢くないと考えました。そこで、選んだのが、Ruby on Railsだったんです。僕はそのころには海外の動向は気に掛けるようになって久しかったですが、アメリカではRuby on Railsが話題になり始めていたころでした。Rubyは気に入っていたのでいい選択でした。
最後の（３）については、受託型開発事業にアジャイルを適用させることの限界感によるものです。詳しくは、この時期を経て2006年1月にブログに書いた「ディフェンシブな開発 ～ SIビジネスの致命的欠陥」という記事（こちらを参照）を読んでいただければと思いますが、このころ僕は、「SI事業者の受託開発事業モデルとアジャイル開発の間には構造的ミスマッチがあって、（今のままでは）馴染まない」と考えていました。受託開発に関わるエンジニアから、社内システムを開発するエンジニアであったり、自社サービスを開発するエンジニアに変われば、アジャイルでやれると考えていたということです。でも、この段階では自社サービス開発の選択肢は選べないので、社内システムを開発しようと考えたんです。

-- このころ、XPJUGの活動はどうされていたんですか？
そうですね。本業のインパクトが大きくてあまり印象に残っていませんが、続けていたはず *1 です（苦笑）。さっきも言ったように、受託開発とアジャイルのミスマッチを感じていましたが、それはそれとして、情熱的とは言えないかもしれませんが、冷静に淡々とまじめに取り組んでいたはずです。

-- 3つのチェンジを会社に認めさせるのは、大変だったんじゃないですか？
自分で言うのも何ですが、僕はそういうことを会社に受け入れさせる政治力には定評がありまして（笑）、その辺は朝飯前でした。「自分たちがオーソライズされているミッションを人手をかけずに実現するにはシステム化する必要があります。開発は社外に発注せず、すべきことを取り上げられた自分たちが内製した方がキャッシュアウト *2 を回避できます。どうせやるなら、先駆的で新しい学びを得られそうなRuby on Railsを採用する方が基盤技術センターの趣旨に添っています」と言って、部長を説得しました。要員を取り上げて事業計画を反故にさせてしまったのは会社のほうですしね（苦笑）。

-- なるほど、さすがですね。そうして手がけたのが－。
はい、今のSKIPです。当時は、TCポータル（Technology Center Portal）と呼んでいました。

-- どんなシステムだったんですか？
その話をする前に、システム化する以前の活動を説明した方がいいでしょう。 チームが解散する前、20人近くで僕たちがやっていたことをひとことで表現すれば、「社内新聞社」でした。それまで僕たちのいた会社では、データベースの専門家が隣の部署にいるのに気づかずに、社外のコンサルタントと契約して、キャッシュアウトさせたりしていました。そこで、もっと社内の情報を共有できれば効率が良くなるだろうと言うことで始めたのが、中央集権型の情報発信機構、つまり新聞社だったんです。しかし、他の業務もこなしながらでは情報の鮮度を保つのが難しく、一方通行でした。何より、なかなか読者が増えていきませんでした。

-- 行き詰まりを感じ始めていたんですね？
そうですね。それで、他の社員にどんな情報が求められているかヒアリングしたんです。そうしたら、求められているのは「小さな成功の要因や失敗したポイント、誰に何を聞けばいいかというアドバイス」といったちょっとした情報だというんです。このころは、mixiが使われ始めたころで、アメリカで流行りだしていたWeb 2.0、CGM *3 、ロングテール *4 といったキーワードに注目していました。それで自分たちで作っちゃうことにしたわけです。でも、SNSを作ろうとしたわけではありません。作ろうとしたのは、エンジニア同士が自ら情報発信することで、互いに交流し、互いを発見する仕組みでした。

-- どれくらいで完成したんですか？
開発そのものは、1、2ヶ月ほどでしょうか。9月中旬に解散が決まったんですが、年内にはリリースしていました。最初は、知る人ぞ知る、秘密の招待制サイトとしてスタートしました。なぜ、招待制にしたかと言えば、最初からラガード *5 やレートマジョリティが一気に入ってきたらコミュニティとして成立しないだろうと考えたからです。まずは、イノベータやアーリーアダプタから小さく始めよう、ということです。この目論見は成功でした。最初に招待した100人がコアなファンになってくれて、一気にコミュニティができあがりました。実は、2006年の終わりにリリースした後、年明け早々に僕と藤原君は運用を離れなければならなくなってしまったんです。それも3ヶ月も。普通ならダメですよね。僕たちも最初からやり直しだろうと思って戻ってきたんですけど、むしろ行く前より盛り上がっていました。これには正直驚きました。

-- 順調な滑り出しですね。どのように運用されていたんですか？
この後、1年ほどで役員会でデモンストレーションをして公式社内システムとして承認されるんですが、それまではデータセンターでホスティングというわけにはいかないので、デスクサイドのサーバで運用していました。LANケーブルを借りに来た人が運用しているとは思わずに、ケーブルを抜いちゃったときには焦りましたね。もちろん、改修も運用も最初は藤原君と二人でやっていました。そうして地道にやっているうちに、1人、2人とまたスタッフがアサインされるようになりました。運用開始から1年あまりたった、2007年4月、公式社内システムとして承認されたのを機に招待制を廃止し、全面開放しました。それまでに、ユーザ数は全社員のおよそ4割ほどにあたる約800人に増えていました。

-- いやいやおめでとうございます（笑）。これなら転職しなくてもいいんじゃないですか？
僕はこのころ社内システム開発にアジャイルを適用する有効性を確認したいと思っていたんですが、思った以上の結果が出ましたね。でも、やはり会社っていうのはコワイところなんですよ（苦笑）。公式化された矢先の2007年の6月、今度は「藤原をよこせ」って言われたんです。そこで、トラウマが呼び起こされてきたんです。
